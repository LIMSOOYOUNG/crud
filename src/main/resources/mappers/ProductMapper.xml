<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deft.crud.product.model.dao.ProductMapper">
	<resultMap type="com.deft.crud.product.model.dto.ProductDTO" id="productResultMap">
		<id property="productNo" column="PRODUCT_NO"/>
		<result property="sellStatus" column="SELL_STATUS"/>
		<result property="productName" column="PRODUCT_NAME"/>
		<result property="purchasePrice" column="PURCHASE_PRICE"/>
		<result property="sellingPrice" column="SELLING_PRICE"/>
		<result property="unit" column="UNIT"/>
		<result property="categoryCode" column="CATEGORY_CODE"/>
		<result property="accountNo" column="ACCOUNT_NO"/>
		<result property="manufacturerNo" column="MANUFACTURER_NO"/>

		<association property="category" resultMap="productCategoryResultMap"/>		
		
		<association property="manufacturer" resultMap="manufacturerResultMap"/>

		<association property="account" resultMap="accountResultMap"/>
		
	</resultMap>
	
	<resultMap type="com.deft.crud.product.model.dto.ProductCategoryDTO" id="productCategoryResultMap">
		<id property="categoryCode" column="CATEGORY_CODE"/>
		<result property="refCategoryName" column="REF_CATEGORY_NAME"/>
		<result property="categoryName" column="CATEGORY_NAME"/>
		<result property="refCategoryCode" column="REF_CATEGORY_CODE"/>
		<result property="categoryStatus" column="CATEGORY_STATUS"/>
	</resultMap>
	
	<resultMap type="com.deft.crud.product.model.dto.ManufacturerDTO" id="manufacturerResultMap">
		<id property="manufacturerNo" column="MANUFACTURER_NO"/>
		<result property="manufacturerName" column="MANUFACTURER_NAME"/>
	</resultMap>
	
	<resultMap type="com.deft.crud.product.model.dto.AccountDTO" id="accountResultMap">
		<id property="accountNo" column="ACCOUNT_NO"/>
		<result property="companyName" column="COMPANY_NAME"/>
		<result property="accountCeo" column="ACCOUNT_CEO"/>
		<result property="accountAddress" column="ACCOUNT_ADDRESS"/>
		<result property="accountStatus" column="ACCOUNT_STATUS"/>
		<result property="accountBusinessItem" column="ACCOUNT_BUSINESS_ITEM"/>
		<result property="resName" column="RES_NAME"/>
		<result property="resPhone" column="RES_PHONE"/>
		<result property="resEmail" column="RES_EMAIL"/>
		
	</resultMap>
	
	<resultMap type="com.deft.crud.product.model.dto.ProductImageDTO" id="productImageMap">
		<id property="productImageNo" column="PRODUCT_IMAGE_NO"/>
		<result property="originalName" column="ORIGINAL_NAME"/>
		<result property="savedName" column="SAVED_NAME"/>
		<result property="savedPath" column="SAVED_PATH"/>
		<result property="productNo" column="PRODUCT_NO"/>
		<result property="thumbnailPath" column="THUMBNAIL_PATH"/>
	
	</resultMap>
	
	<!-- 상품 정보 조회 -->
	<select id="allProductList" resultMap="productResultMap">
	    SELECT /*com.deft.crud.product.model.dao.ProductMapper#allProductList()*/
	           P.PRODUCT_NO
     	 	 , P.PRODUCT_NAME
     		 , P.SELL_STATUS
     		 , B.CATEGORY_NAME "REF_CATEGORY_NAME"
     		 , A.REF_CATEGORY_CODE            
     		 , A.CATEGORY_NAME
           FROM TBL_PRODUCT P
	       LEFT JOIN TBL_PRODUCT_CATEGORY A ON(P.CATEGORY_CODE = A.CATEGORY_CODE)
	       LEFT JOIN TBL_PRODUCT_CATEGORY B ON(A.REF_CATEGORY_CODE = B.CATEGORY_CODE)
	</select>
	
	<!-- 카테고리 정보 조회 -->
	<select id="allCategoryList" resultMap="productCategoryResultMap">
		SELECT /*com.deft.crud.product.model.dao.ProductMapper#allCategoryList()*/
			   A.CATEGORY_CODE
			 , A.CATEGORY_NAME
			 , A.REF_CATEGORY_CODE
			 , A.CATEGORY_STATUS
			 , B.CATEGORY_NAME "REF_CATEGORY_NAME"
		  FROM TBL_PRODUCT_CATEGORY A
	      LEFT JOIN TBL_PRODUCT_CATEGORY B ON (A.REF_CATEGORY_CODE = B.CATEGORY_CODE)		
	</select>
	
	<!-- 상품 정보 조회 -->
	<select id="refCategoryList" resultMap="productCategoryResultMap">
		 SELECT /*com.deft.crud.product.model.dao.ProductMapper#refCategoryList()*/
       	        A.CATEGORY_CODE "REF_CATEGORY_CODE"
     	   	  , A.CATEGORY_NAME "REF_CATEGORY_NAME"
     	   	  , A.CATEGORY_STATUS
  	       FROM TBL_PRODUCT_CATEGORY A
 		  WHERE REF_CATEGORY_CODE IS NULL
	</select>
	
	<!-- 상품 정보 조회 -->
	<select id="categoryList" resultMap="productCategoryResultMap">
		SELECT /*com.deft.crud.product.model.dao.ProductMapper#categoryList()*/
        	   A.CATEGORY_CODE 
             , A.CATEGORY_NAME
             , A.REF_CATEGORY_CODE
             , A.CATEGORY_STATUS
          FROM TBL_PRODUCT_CATEGORY A
         WHERE A.REF_CATEGORY_CODE IS NOT NULL
	</select>
	
	<!-- 상품 정보 조회 -->
	<select id="manufacturerList" resultMap="manufacturerResultMap">
		SELECT /*com.deft.crud.product.model.dao.ProductMapper#manufacturerList()*/
			   A.MANUFACTURER_NO
			 , A.MANUFACTURER_NAME
		  FROM TBL_MANUFACTURER A
	</select>
	
	<!-- 상품 정보 조회 -->
	<select id="productDetail" resultMap="productResultMap">
		 SELECT /*com.deft.crud.product.model.dao.ProductMapper#productDetail()*/
                P.PRODUCT_NO
	   		  , P.PRODUCT_NAME
	   		  , T.MANUFACTURER_NAME
	   		  , P.SELL_STATUS
	   	      , P.SELLING_PRICE
	   	      , P.PURCHASE_PRICE
	   	      , CA.REF_CATEGORY_CODE
	   	      , CB.CATEGORY_NAME "REF_CATEGORY_NAME"
	   	      , CA.CATEGORY_NAME
	   	      , A.COMPANY_NAME
          FROM TBL_PRODUCT P
	      LEFT JOIN TBL_PRODUCT_CATEGORY CA ON(P.CATEGORY_CODE = CA.CATEGORY_CODE)
	      LEFT JOIN TBL_PRODUCT_CATEGORY CB ON(CA.REF_CATEGORY_CODE = CB.CATEGORY_CODE)
	      JOIN TBL_ACCOUNT A ON(P.ACCOUNT_NO = A.ACCOUNT_NO)
	      JOIN TBL_MANUFACTURER T ON(P.MANUFACTURER_NO = T.MANUFACTURER_NO)
	      WHERE P.PRODUCT_NO = #{ productNo }
	</select>
	
	<!-- 상품 정보 조회 -->
	<select id="selectProductImage" resultMap="productImageMap">
		SELECT /*com.deft.crud.product.model.dao.ProductMapper#selectProductImage()*/
			   P.PRODUCT_IMAGE_NO
			 , P.ORIGINAL_NAME
			 , P.SAVED_NAME
			 , P.SAVED_PATH
			 , P.PRODUCT_NO
			 , P.THUMBNAIL_PATH
	      FROM TBL_PRODUCT_IMAGE P
	     WHERE P.PRODUCT_NO = #{ productNo }
	</select>
	
	<!-- 상품 정보 조회 -->
	<select id="selectSmallCategoryList" resultMap="productCategoryResultMap">
		SELECT /*com.deft.crud.product.model.dao.ProductMapper#selectSmallCategoryList()*/
			   PC.CATEGORY_CODE
			 , PC.CATEGORY_NAME
			 , PC.REF_CATEGORY_CODE
		  FROM TBL_PRODUCT_CATEGORY PC
		 WHERE REF_CATEGORY_CODE = #{ refCategoryCode }
			   
	</select>
	
	<!-- 상품 정보 조회 -->
	<select id="accountList" resultMap="accountResultMap">
		SELECT /*com.deft.crud.product.model.dao.ProductMapper#accountList()*/
			   A.ACCOUNT_NO
			 , A.COMPANY_NAME
		  FROM TBL_ACCOUNT A
	</select>
	
	
	<!-- 상품 정보 조회 -->
	<insert id="insertRefCategory" parameterType="com.deft.crud.product.model.dto.ProductCategoryDTO">
		INSERT /*com.deft.crud.product.model.dao.ProductMapper#insertRefCategory()*/
		  INTO TBL_PRODUCT_CATEGORY T
		(
		  T.CATEGORY_CODE, T.CATEGORY_NAME, T.REF_CATEGORY_CODE, T.CATEGORY_STATUS
		)
		VALUES
		(
		  SEQ_CATEGORY_CODE.NEXTVAL, #{ refCategoryName }, NULL, #{ categoryStatus }
		)
	</insert>
	
	<!-- 상품 정보 조회 -->
	<insert id="insertCategory" parameterType="com.deft.crud.product.model.dto.ProductCategoryDTO">
		INSERT /*com.deft.crud.product.model.dao.ProductMapper#insertCategory()*/
		  INTO TBL_PRODUCT_CATEGORY T
		(
		  T.CATEGORY_CODE, T.CATEGORY_NAME, T.REF_CATEGORY_CODE, T.CATEGORY_STATUS
		)
		VALUES
		(
		  SEQ_CATEGORY_CODE.NEXTVAL, #{ categoryName }, #{ refCategoryCode }, #{ categoryStatus }
		)
	</insert>
	
	<!-- 상품 정보 조회 -->
	<update id="updateRefCategory" parameterType="com.deft.crud.product.model.dto.ProductCategoryDTO">
		UPDATE /*com.deft.crud.product.model.dao.ProductMapper#updateRefCategory()*/
			   TBL_PRODUCT_CATEGORY P
		   SET P.CATEGORY_NAME = #{ refCategoryName }
		     , P.CATEGORY_STATUS = #{ categoryStatus }
		 WHERE P.CATEGORY_CODE = #{ refCategoryCode } 
	</update>
	
	<!-- 상품 정보 조회 -->
	<insert id="insertProduct" parameterType="com.deft.crud.product.model.dto.InsertProductDTO">
		INSERT /*com.deft.crud.product.model.dao.ProductMapper#insertProduct()*/
		  INTO TBL_PRODUCT P
	    (
	      P.PRODUCT_NO, P.SELL_STATUS, P.PRODUCT_NAME, P.PURCHASE_PRICE
	    , P.SELLING_PRICE, P.UNIT, P.CATEGORY_CODE, P.ACCOUNT_NO, P.MANUFACTURER_NO
		)
		VALUES
		(
		 SEQ_PRODUCT_NO.NEXTVAL, #{ sellStatus }, #{ productName }, #{ purchasePrice } 
		, #{ sellingPrice }, #{ unit }, #{ categoryCode }, #{ accountNo }, #{ manufacturerNo }
		)
	</insert>
	
	<!-- 상품 이미지 등록을 위해 마지막 시퀀스 번호 조회 -->
	<select id="selectProductSeq" resultType="_int">
		SELECT /*com.deft.crud.product.model.dao.ProductMapper#selectProductSeq()*/
			   LAST_NUMBER "PRODUCT_NO"
		  FROM USER_SEQUENCES
		 WHERE SEQUENCE_NAME = 'SEQ_PRODUCT_NO'
	</select>
	
	<!-- 상품 이미지 등록 -->
	<insert id="insertProductImage" parameterType="com.deft.crud.product.model.dto.ProductImageDTO">
		INSERT /*com.deft.crud.product.model.dao.ProductMapper#insertProductImage()*/
		  INTO TBL_PRODUCT_IMAGE P
	    (
		  P.PRODUCT_IMAGE_NO, P.ORIGINAL_NAME, P.SAVED_NAME 
	    , P.SAVED_PATH, P.PRODUCT_NO, P.THUMBNAIL_PATH
		)
		VALUES
		(
		  SEQ_PRODUCT_IMG_NO.NEXTVAL, #{ originalName }, #{ savedName },
		  #{ savedPath }, #{ productNo }, #{ thumbnailPath } 
		)
	</insert>
	
	<!-- 상품 텍스트 수정 -->
	<update id="modifyProductForText" parameterType="com.deft.crud.product.model.dto.ProductDTO">
		UPDATE /*com.deft.crud.product.model.dao.ProductMapper#modifyProductForText()*/
			   TBL_PRODUCT A
		   SET A.SELL_STATUS = #{ sellStatus }
		     , A.PRODUCT_NAME = #{ productName }
		     , A.PURCHASE_PRICE = #{ purchasePrice }
		     , A.SELLING_PRICE = #{ sellingPrice }
		     , A.CATEGORY_CODE = #{ categoryCode }
		     , A.ACCOUNT_NO = #{ accountNo } 
		     , A.MANUFACTURER_NO = #{ manufacturerNo }
		 WHERE A.PRODUCT_NO = #{ productNo } 
	</update>
	
	<!-- 상품 정보 조회 -->
	<update id="modifyProductImage" parameterType="com.deft.crud.product.model.dto.ProductImageDTO">
		UPDATE /*com.deft.crud.product.model.dao.ProductMapper#modifyProductForText()*/
			   TBL_PRODUCT_IMAGE P
		   SET P.ORIGINAL_NAME = #{ originalName }
		     , P.SAVED_NAME = #{ savedName }
			 , P.SAVED_PATH = #{ savedPath }
			 , P.THUMBNAIL_PATH = #{ thumbnailPath }
		 WHERE P.PRODUCT_NO = #{ productNo }
	</update>
	
	<!-- 상품 정보 조회 -->
	<select id="selectOneCategory" resultMap="productCategoryResultMap">
		SELECT /*com.deft.crud.product.model.dao.ProductMapper#selectOneCategory()*/
			   C.CATEGORY_CODE
			 , C.CATEGORY_NAME
			 , B.CATEGORY_CODE "REF_CATEGORY_CODE"
			 , B.CATEGORY_NAME "REF_CATEGORY_NAME"
	      FROM TBL_PRODUCT_CATEGORY C
	      JOIN TBL_PRODUCT_CATEGORY B ON (B.CATEGORY_CODE = C.REF_CATEGORY_CODE)
	     WHERE C.CATEGORY_CODE = #{ selectedCategory }
	</select>
	
	<!-- 상품 정보 조회 -->
	<update id="updateCategory" parameterType="com.deft.crud.product.model.dto.ProductCategoryDTO">
		UPDATE /*com.deft.crud.product.model.dao.ProductMapper#updateCategory()*/
			   TBL_PRODUCT_CATEGORY P
		   SET CATEGORY_NAME = #{ categoryName }
         	 , REF_CATEGORY_CODE = #{ refCategoryCode }
             , P.CATEGORY_STATUS = #{ categoryStatus }
         WHERE CATEGORY_CODE = #{ categoryCode }
	</update>
	
</mapper>