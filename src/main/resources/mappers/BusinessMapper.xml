<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deft.crud.business.model.dao.BusinessMapper">

	<resultMap type="com.deft.crud.business.model.dto.BusinessChanceDTO"
			   id="businessChanceResultMap">
		<id property="businessChanceNo" column="BUSINESS_CHANCE_NO" />
		<result property="progressStatus" column="PROGRESS_STATUS" />
		<result property="salesLevel" column="SALES_LEVEL" />
		<result property="successPosibillity" column="SUCCESS_POSIBILLITY" />
		<result property="businessTitle" column="BUSINESS_TITLE" />
		<result property="dueDate" column="DUE_DATE" />
		<result property="empName" column="EMP_NAME" />
		<result property="empNo" column="EMP_NO" />
		<result property="customerName" column="CUSTOMER_NAME" />
		<result property="customerNo" column="CUSTOMER_NO" />
		<result property="productName" column="PRODUCT_NAME" />
		<result property="customerCompanyName" column="COMPANY_NAME" />
	</resultMap>

	<resultMap type="com.deft.crud.business.model.dto.BusinessActivityDTO"
			   id="businessActivityResultMap">
		<id property="customerNo" column="CUSTOMER_NO" />
		<result property="customerName" column="CUSTOMER_NAME" />
		<result property="activityNo" column="ACTIVITY_NO" />
		<result property="customerNo" column="CUSTOMER_NO" />
		<result property="empNo" column="EMP_NO" />
		<result property="empName" column="EMP_NAME" />
		<result property="managerNo" column="MANAGER_NO" />
		<result property="businessSubject" column="BUSINESS_SUBJECT" />
		<result property="businessType" column="BUSINESS_TYPE" />
		<result property="businessLocation" column="BUSINESS_LOCATION" />
		<result property="businessPurpose" column="BUSINESS_PURPOSE" />
		<result property="businessContents" column="BUSINESS_CONTENTS" />
		<result property="writingTime" column="WRITING_TIME" />
		<result property="activityStartTime" column="ACTIVITY_START_TIME" />
		<result property="activityEndTime" column="ACTIVITY_END_TIME" />
	</resultMap>

	<resultMap type="com.deft.crud.business.model.dto.BusinessChanceHistoryDTO"
			   id="businessChanceChangeHistoryResultMap">
		<id property="businessChanceNo" column="BUSINESS_CHANCE_NO" />
		<result property="businessChanceHisNo" column="BUSINESS_CHANCE_HIS_NO" />
		<result property="progressStatus" column="PROGRESS_STATUS" />
		<result property="salesLevel" column="SALES_LEVEL" />
		<result property="successPosibillity" column="SUCCESS_POSIBILLITY" />
		<result property="empName" column="EMP_NAME" />
		<result property="businessChanceChangeDate" column="BUSINESS_CHANCE_CHANGE_DATE" />
	</resultMap>
	
	<resultMap id="customerResultMap" type="com.deft.crud.customer.model.dto.CustomerDTO">
        <id property="customerNo" column="CUSTOMER_NO"/>
        <result property="customerCompanyNo" column="CUSTOMER_COMPANY_NO"/>
        <result property="empNo" column="EMP_NO"/>
        <result property="customerName" column="CUSTOMER_NAME"/>
        <result property="customerEmail" column="CUSTOMER_EMAIL"/>
        <result property="customerAddress" column="CUSTOMER_ADDRESS"/>
        <result property="customerPhone" column="CUSTOMER_PHONE"/>
        <result property="customerFax" column="CUSTOMER_FAX"/>
        
        <association property="empInfo" resultMap="empInfoResultMap"/>
	</resultMap>
	
	<resultMap id="empInfoResultMap" type="com.deft.crud.customer.model.dto.EmpInfoDTO">
        <id property="empNo" column="EMP_NO"/>
        <result property="empName" column="EMP_NAME"/>
        <result property="empId" column="EMP_ID"/>
        <result property="empPwd" column="EMP_PWD"/>
        <result property="empEmail" column="EMP_EMAIL"/>
        <result property="empGender" column="EMP_GENDER"/>
        <result property="empBirth" column="EMP_BIRTH"/>
        <result property="empAddress" column="EMP_ADDRESS"/>
        <result property="empPhone" column="EMP_PHONE"/>
        <result property="empTel" column="EMP_TEL"/>
        <result property="hireDate" column="HIRE_DATE"/>
        <result property="entDate" column="ENT_DATE"/>
        <result property="entYn" column="ENT_YN"/>
        <result property="authority" column="AUTHORITY"/>
        <result property="jobCode" column="JOB_CODE"/>
        <result property="deptCode" column="DEPT_CODE"/>
        <result property="managerNo" column="MANAGER_NO"/>

        <association property="dept" resultMap="departmentResultMap"/>
        <association property="job" resultMap="jobResultMap"/>
    </resultMap>
    
    <resultMap id="jobResultMap" type="com.deft.crud.customer.model.dto.JobDTO">
        <id property="jobCode" column="JOB_CODE"/>
        <result property="jobName" column="JOB_NAME"/>
        <result property="jobStatus" column="JOB_STATUS"/>
    </resultMap>

    <resultMap id="departmentResultMap" type="com.deft.crud.customer.model.dto.DepartmentDTO">
        <id property="deptCode" column="DEPT_CODE"/>
        <result property="deptName" column="DEPT_NAME"/>
        <result property="deptFax" column="DEPT_FAX"/>
        <result property="deptTel" column="DEPT_TEL"/>
        <result property="deptStatus" column="DEPT_STATUS"/>
    </resultMap>

	<!-- 영업기회 목록 조회(담당자 or 사원) --> 
	<select id="selectBusinessChanceAll" resultMap="businessChanceResultMap"
			parameterType="com.deft.crud.member.model.service.UserImpl">
		SELECT /* com.deft.crud.business.model.dao.BusinessMapper#selectBusinessChanceAll() */
		       A.BUSINESS_CHANCE_NO
		     , A.PROGRESS_STATUS
		     , A.SALES_LEVEL
		     , A.SUCCESS_POSIBILLITY
		     , A.BUSINESS_TITLE
		     , A.DUE_DATE
		     , C.EMP_NAME
		     , A.EMP_NO
		     , B.CUSTOMER_NAME
		     , A.CUSTOMER_NO
		     , C.MANAGER_NO
		  FROM TBL_BUSINESS_CHANCE A
		  JOIN TBL_CUSTOMER B ON (A.CUSTOMER_NO = B.CUSTOMER_NO)
		  JOIN TBL_EMP_INFO C ON (A.EMP_NO = C.EMP_NO)
		<choose>
			<when test="authority == '담당자'">
				WHERE C.MANAGER_NO = #{ empNo }
			</when>
			<when test="authority != '담당자'">
				WHERE A.EMP_NO = #{ empNo }
			</when>
		</choose>
		ORDER BY A.DUE_DATE DESC
	</select>

	<!-- 영업기회 진행상태별 목록 조회(담당자 or 사원) -->
	<select id="selectBusinessChanceByStatus" resultMap="businessChanceResultMap"
		    parameterType="com.deft.crud.member.model.service.UserImpl">
		SELECT /* com.deft.crud.business.model.dao.BusinessMapper#selectBusinessChanceByStatus() */
		       A.BUSINESS_CHANCE_NO
		     , A.PROGRESS_STATUS
		     , A.SALES_LEVEL
		     , A.SUCCESS_POSIBILLITY
		     , A.BUSINESS_TITLE
		     , A.DUE_DATE
		     , C.EMP_NAME
		     , A.EMP_NO
		     , B.CUSTOMER_NAME
		     , A.CUSTOMER_NO
		     , C.MANAGER_NO
		  FROM TBL_BUSINESS_CHANCE A
		  JOIN TBL_CUSTOMER B ON (A.CUSTOMER_NO = B.CUSTOMER_NO)
		  JOIN TBL_EMP_INFO C ON (A.EMP_NO = C.EMP_NO)
		<choose>
			<when test="userInfo.authority == '담당자'">
				WHERE C.MANAGER_NO = #{ userInfo.empNo }
			</when>
			<when test="userInfo.authority != '담당자'">
				WHERE A.EMP_NO = #{ userInfo.empNo }
			</when>
		</choose>
		<choose>
			<when test="businessChanceStatus == 'all'">
      		</when>
      		<when test="businessChanceStatus == 'progress'">
                AND A.PROGRESS_STATUS = '진행중'
         	</when>
         	<when test="businessChanceStatus == 'success'">
                AND A.PROGRESS_STATUS = '성공'
         	</when>
         	<when test="businessChanceStatus == 'postpone'">
                AND A.PROGRESS_STATUS = '보류중'
         	</when>
         	<when test="businessChanceStatus == 'failed'">
                AND A.PROGRESS_STATUS = '실패'
         	</when>
		</choose>
		  ORDER BY A.DUE_DATE DESC
	</select>

	<!-- 고객번호로 해당 고객에 대한 영업활동기록 조회 -->
	<select id="selectActivityListByNo" resultMap="businessActivityResultMap">
		SELECT /* com.deft.crud.business.model.dao.BusinessMapper#selectBasicInfoByNo() */
		       A.ACTIVITY_NO
		     , A.BUSINESS_SUBJECT
             , C.CUSTOMER_NAME
	     	 , B.EMP_NAME
		     , A.WRITING_TIME
		     , A.ACTIVITY_START_TIME
		  FROM TBL_BUSINESS_ACTIVITY A
		  JOIN TBL_CUSTOMER C ON(A.CUSTOMER_NO = C.CUSTOMER_NO)
		  JOIN TBL_EMP_INFO B ON(C.EMP_NO = B.EMP_NO)
		 WHERE A.CUSTOMER_NO = #{ customerNo }
	</select>

	<!-- 영업기회번호로 해당 영업기회 정보 조회 -->
	<select id="selectChanceInfoByNo" resultMap="businessChanceResultMap">
		SELECT /* com.deft.crud.business.model.dao.BusinessMapper#selectBasicInfoByNo() */
		       A.BUSINESS_CHANCE_NO
		     , A.BUSINESS_TITLE
		     , A.PROGRESS_STATUS
	   	     , B.EMP_NAME
		     , F.COMPANY_NAME
		     , C.CUSTOMER_NAME
		     , A.SALES_LEVEL
		     , A.SUCCESS_POSIBILLITY
		     , LISTAGG(E.PRODUCT_NAME, ', ') WITHIN GROUP (ORDER BY E.PRODUCT_NO) AS PRODUCT_NAME
		     , A.DUE_DATE
		 FROM TBL_BUSINESS_CHANCE A
		 LEFT JOIN TBL_EMP_INFO B ON(A.EMP_NO = B.EMP_NO)
		 LEFT JOIN TBL_CUSTOMER C ON(A.CUSTOMER_NO = C.CUSTOMER_NO)
		 LEFT JOIN TBL_CUSTOMER_PRODUCT D ON(C.CUSTOMER_NO = D.CUSTOMER_NO)
		 LEFT JOIN TBL_PRODUCT E ON(D.PRODUCT_NO = E.PRODUCT_NO)
		 LEFT JOIN TBL_CUSTOMER_COMPANY F ON(C.CUSTOMER_COMPANY_NO = F.CUSTOMER_COMPANY_NO)
		WHERE BUSINESS_CHANCE_NO = #{ businessChanceNo }
		GROUP BY A.BUSINESS_CHANCE_NO
		       , A.BUSINESS_TITLE
		       , A.PROGRESS_STATUS
		       , B.EMP_NAME
		       , F.COMPANY_NAME
		       , C.CUSTOMER_NAME
		       , A.SALES_LEVEL
		       , A.SUCCESS_POSIBILLITY
		       , A.DUE_DATE
	</select>


	<!-- 영업상태별 영업기회 목록조회 -->
	<select id="selectChanceHistoryByNo" resultMap="businessChanceChangeHistoryResultMap">
		SELECT /* com.deft.crud.business.model.dao.BusinessMapper#selectChanceHistoryByNo() */
		       B.BUSINESS_CHANCE_CHANGE_DATE
		     , A.BUSINESS_CHANCE_NO
		     , B.BUSINESS_CHANCE_HIS_NO
		     , C.EMP_NAME
		     , A.PROGRESS_STATUS
		     , A.SALES_LEVEL
		     , A.SUCCESS_POSIBILLITY
		  FROM TBL_BUSINESS_CHANCE A
		  JOIN TBL_BUSINESS_CHANCE_HIS B ON(A.BUSINESS_CHANCE_NO =  B.BUSINESS_CHANCE_NO)
		  JOIN TBL_EMP_INFO C ON(A.EMP_NO = C.EMP_NO)
		 WHERE A.BUSINESS_CHANCE_NO = #{ businessChanceNo }
		 ORDER BY B.BUSINESS_CHANCE_CHANGE_DATE
	</select>

	<!-- 전체영업활동 조회 -->
	<select id="selectActivityAll" resultMap="businessActivityResultMap"
			parameterType="com.deft.crud.member.model.service.UserImpl">
		SELECT /* com.deft.crud.business.model.dao.BusinessMapper#selectBasicInfoByNo() */
		       A.ACTIVITY_NO
		     , A.BUSINESS_SUBJECT
		     , B.EMP_NAME
		     , B.EMP_NO
		     , B.MANAGER_NO
		     , C.CUSTOMER_NAME
		     , C.CUSTOMER_NO
		     , A.WRITING_TIME
		     , A.ACTIVITY_START_TIME
		     , A.ACTIVITY_END_TIME
		  FROM TBL_BUSINESS_ACTIVITY A
		  LEFT JOIN TBL_CUSTOMER C ON(A.CUSTOMER_NO = C.CUSTOMER_NO)
		  LEFT JOIN TBL_EMP_INFO B ON(C.EMP_NO = B.EMP_NO)
		<choose>
			<when test="authority == '담당자'">
				WHERE B.MANAGER_NO = #{ empNo }
			</when>
			<when test="authority != '담당자'">
				WHERE B.EMP_NO = #{ empNo }
			</when>
		</choose>
		ORDER BY A.WRITING_TIME DESC
	</select>

	<!-- 선택한 영업활동 상세정보 조회 -->
	<select id="selectActivityDetailInfoByNo" resultMap="businessActivityResultMap" parameterType="_int">
		SELECT /* com.deft.crud.business.model.dao.BusinessMapper#selectActivityDetailInfoByNo() */
		       A.ACTIVITY_NO
		     , A.BUSINESS_SUBJECT
		     , A.WRITING_TIME
		     , A.ACTIVITY_START_TIME
		     , A.ACTIVITY_END_TIME
		     , A.BUSINESS_PURPOSE
		     , A.BUSINESS_CONTENTS
		     , A.BUSINESS_TYPE
		     , A.BUSINESS_LOCATION
		     , B.EMP_NAME
		     , B.EMP_NO
		     , B.MANAGER_NO
		     , C.CUSTOMER_NAME
		     , C.CUSTOMER_NO
		  FROM TBL_BUSINESS_ACTIVITY A
		  LEFT JOIN TBL_CUSTOMER C ON(A.CUSTOMER_NO = C.CUSTOMER_NO)
		  LEFT JOIN TBL_EMP_INFO B ON(C.EMP_NO = B.EMP_NO)
		 WHERE A.ACTIVITY_NO = #{ activityNo } 
	</select>

	<!-- 담당중인 고객 리스트 조회 -->
	<select id="selectMyCustomerList" resultMap="customerResultMap" parameterType="com.deft.crud.member.model.service.UserImpl">
		SELECT /* com.deft.crud.business.model.dao.BusinessMapper#selectMyCustomerList() */
		       A.CUSTOMER_NO
		     , A.CUSTOMER_NAME
		     , A.EMP_NO
		     , B.EMP_NAME
		  FROM TBL_CUSTOMER A
		  LEFT JOIN TBL_EMP_INFO B ON(A.EMP_NO = B.EMP_NO)
		 WHERE A.EMP_NO = #{ empNo }   
	</select>
	
	 <!-- 영업 활동 등록 -->
    <insert id="insertActivity" parameterType="com.deft.crud.customer.model.dto.BusinessActivityDTO">
        INSERT /* com.deft.crud.business.model.dao.BusinessMapper#insertActivity() */
        INTO TBL_BUSINESS_ACTIVITY
        (
          ACTIVITY_NO
        , CUSTOMER_NO, BUSINESS_SUBJECT, BUSINESS_TYPE
        , BUSINESS_LOCATION, BUSINESS_PURPOSE, BUSINESS_CONTENTS
        , WRITING_TIME, ACTIVITY_START_TIME
        , ACTIVITY_END_TIME
        )
        VALUES
        (
          SEQ_ACTIVITY_NO.NEXTVAL
        , #{ customerNo }, #{ businessSubject }, #{ businessType }
        , #{ businessLocation }, #{ businessPurpose }, #{ businessContents }
        , SYSDATE, TO_DATE(REPLACE(#{ activityStartTime },'T',' '), 'YYYY-MM-DD HH24:MI:SS')
        , TO_DATE(REPLACE(#{ activityEndTime },'T',' '), 'YYYY-MM-DD HH24:MI:SS')
        )
    </insert>
	
	<!-- 영업 활동 수정 -->
    <update id="modifyActivity" parameterType="com.deft.crud.customer.model.dto.BusinessActivityDTO">
        UPDATE /* com.deft.crud.business.model.dao.BusinessMapper#modifyActivity() */
        TBL_BUSINESS_ACTIVITY A
        SET 
            A.BUSINESS_SUBJECT = #{ businessSubject }
          , A.BUSINESS_TYPE = #{ businessType }
          , A.BUSINESS_LOCATION = #{ businessLocation }
          , A.BUSINESS_PURPOSE = #{ businessPurpose }
          , A.BUSINESS_CONTENTS = #{ businessContents }
          , A.WRITING_TIME = SYSDATE
          , A.ACTIVITY_START_TIME = TO_DATE(REPLACE(#{ activityStartTime },'T',' '), 'YYYY-MM-DD HH24:MI:SS')
          , A.ACTIVITY_END_TIME = TO_DATE(REPLACE(#{ activityEndTime },'T',' '), 'YYYY-MM-DD HH24:MI:SS')
        WHERE A.ACTIVITY_NO = #{ activityNo }
    </update>

	<!-- 영업 활동 삭제 -->
    <delete id="deleteActivity" parameterType="_int">
        DELETE /* com.deft.crud.customer.model.dao.BusinessMapper#deleteActivity() */
        FROM TBL_BUSINESS_ACTIVITY
        WHERE ACTIVITY_NO = #{ activityNo }
    </delete>


</mapper>