- App 테스트 수행
서술형 : p.18 - 단위, 통합, 시스템, 인수테스트 서술 (NCS)
	p.34 - 결함관리 프로세스 7개 활동 / 프로세스 흐름별 작성 (1 ~ 7단계)
	자바환경 테스트 위한 프레임워크 (JUnit)
	특정 결과를 입력하여 테스트 진행 (Mock test)
	p.52 - 결함관리 용어 서술 (에러, 오류, 실패, 결함)

포트폴리오 : 제공된 양식에 맞춰 작성, 캡쳐
	테스트 케이스, 결함관리 현황, 결함관리 대장

- App 테스트 관리
포트폴리오 : 테스트 케이스 및 시나리오,
	성능 개선, 예시 >> before & after로 작성

- App 배포
서술형 : 여러가지 언어(java, javascript, kotlin)
	컴파일 / 인터프리터 언어
	(컴파일) 컴파일 후 빌드 > 시간이 오래 걸림
	실행 > 이미 번역되어 있어서 빠르게 실행 (인터프리터는 반대)
	.jar(java achaive file)
	.war(web achaive file)
	JUnit 어썰트 관련 함수
	1) 특정 객체가 null이 아닌 경우
	2) 어떤 값하고 일치하는지 확인 assultEqual( )
	(JUnit4 기준)
	@Test, @Ignore, @Before annotation 빈칸 넣기
	빌드 관련 용어 / 지속적인 통합 환경 Continuous Integration(CI)
	테스트 코드에 의해 수행되는 소스 코드 > 테스트 커버리지
	(일반적으로 70~80% 커버)
	App 배포 수행 순서 > 모듈 참고
	App 실행 환경 정보 확인, 배포 절차에 따라 운영 환경에 적용, 배포 후 정상작동 확인, 문제 발견 시 이전 상태로 복원, 환경 전환, App 계획 수립(?)
	객관식.. 문제 속에 답..
포트폴리오 : spring legacy 프로젝트 기준
	1) 톰캣 서버 다운로드 검색 후 캡쳐
	2) 다운받은 파일 압축 해제, webapps 탐색기 화면 캡쳐
	3) 브라우저 상에서 깃허브 접속 후 캡쳐
	4) sts 또는 인텔리제이 아이디 캡쳐
	5) pom.xml 캡쳐
	6) jar파일로 export, 타겟 폴더에 있는 내용 캡쳐
	7) 파일 복사 후 webapps 캡쳐
	8) 프로젝트 메인 화면 캡쳐
